name: Latex Builder

on: [push]

jobs:
  make-it:
    runs-on: ubuntu-latest
    container:
      image: blang/latex:ubuntu
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: Install LaTex utilities
        run:  sudo apt update && sudo apt-get install -y texlive-full
      - name: version
        run: echo "::set-output name=version::$(cat version)"
        id: version
      - name: Make pdf
        run: |
          make
          cp build/module05.pdf /
          cp build/module06.pdf /
          cp build/module07.pdf /
          cp build/module08.pdf /
          cp build/module09.pdf /
  release-it:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: contains(github.ref, 'master')
    needs: [make-it]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install LaTex utilities
        run:  sudo apt update && sudo apt-get install -y texlive-full
      - name: Get version from file
        id: get_version
        run: echo "VERSION=version/$(cat version)" >> $GITHUB_ENV
      - name: Name release from version
        id: get_release
        run: echo "RELEASE=release_$(cat version)" >> $GITHUB_ENV
      - name: Build PDFs
        run: make
      - name: Upload PDFs archives
        uses: actions/upload-artifact@v4
        with:
          name: modules.pdf
          path: |
            build/module05.pdf
            build/module06.pdf
            build/module07.pdf
            build/module08.pdf
            build/module09.pdf
      - name: Bundle Release 
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/module05.pdf
            build/module06.pdf
            build/module07.pdf
            build/module08.pdf
            build/module09.pdf
          name: ${{env.RELEASE}}
          tag_name: ${{env.VERSION}}
          make_latest: true
          body_path: CHANGELOG.md

  # release-it:
  #   if: contains(github.ref, 'master')
  #   runs-on: ubuntu-latest
  #   container:
  #     image: blang/latex:ubuntu
  #   if: "contains(github.ref, 'master')"
  #   steps:
  #     - name: checkout repo
  #       uses: actions/checkout@v4
  #     - name: version
  #       run: echo "::set-output name=version::$(cat version)"
  #       id: version
  #     - name: Make pdf
  #       run: |
  #         make
  #         cp build/module05.pdf /
  #         cp build/module06.pdf /
  #         cp build/module07.pdf /
  #         cp build/module08.pdf /
  #         cp build/module09.pdf /
  #         cp CHANGELOG.md /
  #     - name: create release
  #       uses: actions/create-release@v1
  #       id: create_release
  #       with:
  #         draft: false
  #         prerelease: false
  #         release_name: release_${{ steps.version.outputs.version }}
  #         tag_name: version/${{ steps.version.outputs.version }}
  #         body_path: /CHANGELOG.md
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #     - name: Release Module05
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: /module05.pdf
  #         asset_name: module05.pdf
  #         asset_content_type: application/pdf
  #     - name: Release Module06
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: /module06.pdf
  #         asset_name: module06.pdf
  #         asset_content_type: application/pdf
  #     - name: Release Module07
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: /module07.pdf
  #         asset_name: module07.pdf
  #         asset_content_type: application/pdf
  #     - name: Release Module08
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: /module08.pdf
  #         asset_name: module08.pdf
  #         asset_content_type: application/pdf
  #     - name: Release Module09
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: /module09.pdf
  #         asset_name: module09.pdf
  #         asset_content_type: application/pdf